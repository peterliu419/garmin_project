version: '3'

services:
  # Redis Cluster setup (3 nodes)
  redis-node1:
    image: redis:6.0
    container_name: redis-node1
    ports:
      - "6379:6379"
    command:
      - redis-server
      - "--cluster-enabled"
      - "yes"
      - "--cluster-config-file"
      - "/data/nodes.conf"
      - "--cluster-node-timeout"
      - "5000"
    volumes:
      - redis-data:/data
    networks:
      - app-network

  redis-node2:
    image: redis:6.0
    container_name: redis-node2
    ports:
      - "6380:6379"
    command:
      - redis-server
      - "--cluster-enabled"
      - "yes"
      - "--cluster-config-file"
      - "/data/nodes.conf"
      - "--cluster-node-timeout"
      - "5000"
    volumes:
      - redis-data:/data
    networks:
      - app-network

  redis-node3:
    image: redis:6.0
    container_name: redis-node3
    ports:
      - "6381:6379"
    command:
      - redis-server
      - "--cluster-enabled"
      - "yes"
      - "--cluster-config-file"
      - "/data/nodes.conf"
      - "--cluster-node-timeout"
      - "5000"
    volumes:
      - redis-data:/data
    networks:
      - app-network

  # Prometheus setup
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - app-network

  # Grafana setup
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus
    networks:
      - app-network

  # Producer service setup
  producer-app:
    image: ghcr.io/your-username/producer-app:latest  # Pre-built image from GHCR
    container_name: producer-app
    ports:
      - "5000:5000"  # Expose port 5000
    networks:
      - app-network

  producer-client:
    image: ghcr.io/your-username/producer-client:latest  # Pre-built image from GHCR
    container_name: producer-client
    depends_on:
      - producer-app
    networks:
      - app-network

  # Consumer service setup
  consumer-app:
    image: ghcr.io/your-username/consumer-app:latest  # Pre-built image from GHCR
    container_name: consumer-app
    ports:
      - "5001:5001"  # Expose port 5001
    depends_on:
      - redis-node1
      - redis-node2
      - redis-node3
      - producer-app
    networks:
      - app-network

  consumer-client:
    build:
      context: .
      dockerfile: Dockerfile.consumer_client
    container_name: consumer-client
    depends_on:
      - consumer-app
    networks:
      - app-network

  # Redis Exporter for Prometheus
  redis_exporter:
    image: oliver006/redis_exporter:latest
    container_name: redis-exporter
    environment:
      - REDIS_ADDR=redis-node1:6379
    ports:
      - "9121:9121"
    depends_on:
      - redis-node1
      - redis-node2
      - redis-node3
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  redis-data: