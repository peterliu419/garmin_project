version: '3.8'

services:
  redis-node1:
    image: redis:6.2-alpine
    container_name: redis-node1
    hostname: redis-node1
    ports:
      - "6379:6379"
    command: >
      redis-server 
      --port 6379 
      --cluster-enabled yes 
      --cluster-config-file /data/node1.conf 
      --cluster-node-timeout 5000 
      --bind 0.0.0.0
    volumes:
      - redis-node1-data:/data
    networks:
      redis-cluster-net:
        aliases:
          - redis-node1
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis-node2:
    image: redis:6.2-alpine
    container_name: redis-node2
    hostname: redis-node2
    ports:
      - "6380:6379"
    command: >
      redis-server 
      --port 6379 
      --cluster-enabled yes 
      --cluster-config-file /data/node2.conf 
      --cluster-node-timeout 5000 
      --bind 0.0.0.0
    volumes:
      - redis-node2-data:/data
    networks:
      redis-cluster-net:
        aliases:
          - redis-node2
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis-node3:
    image: redis:6.2-alpine
    container_name: redis-node3
    hostname: redis-node3
    ports:
      - "6381:6379"
    command: >
      redis-server 
      --port 6379 
      --cluster-enabled yes 
      --cluster-config-file /data/node3.conf 
      --cluster-node-timeout 5000 
      --bind 0.0.0.0
    volumes:
      - redis-node3-data:/data
    networks:
      redis-cluster-net:
        aliases:
          - redis-node3
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis-cluster-init:
    image: redis:6.2-alpine
    container_name: redis-cluster-init
    depends_on:
      - redis-node1
      - redis-node2
      - redis-node3
    networks:
      - redis-cluster-net
    volumes:
      - ./init-cluster.sh:/init-cluster.sh
    command: >
      sh /init-cluster.sh

  producer-app:
    image: ghcr.io/peterliu419/garmin_project/producer-app:latest
    container_name: producer-app
    ports:
      - "5001:5001"
    depends_on:
      - redis-cluster-init
    networks:
      - redis-cluster-net
    environment:
      - REDIS_HOSTS=redis-node1:6379,redis-node2:6379,redis-node3:6379
      - FLASK_ENV=production
    entrypoint: 
      - /bin/sh
      - -c
      - |
        until redis-cli -h redis-node1 -p 6379 cluster info | grep -q "cluster_state:ok"; do
          echo "Waiting for Redis cluster to be ready...";
          sleep 5;
        done
        python src/producer/producer_app.py

  producer-client:
    image: ghcr.io/peterliu419/garmin_project/producer-client:latest
    container_name: producer-client
    depends_on:
      - producer-app
    networks:
      - redis-cluster-net
    entrypoint: 
      - /bin/sh
      - -c
      - |
        until redis-cli -h redis-node1 -p 6379 cluster info | grep -q "cluster_state:ok"; do
          echo "Waiting for Redis cluster to be ready...";
          sleep 5;
        done
        python src/producer/producer_client.py

  consumer-app:
    image: ghcr.io/peterliu419/garmin_project/consumer-app:latest
    container_name: consumer-app
    ports:
      - "5002:5002"
    depends_on:
      - redis-cluster-init
      - producer-app
    networks:
      - redis-cluster-net
    environment:
      - REDIS_HOSTS=redis-node1:6379,redis-node2:6379,redis-node3:6379
      - FLASK_ENV=production
    entrypoint: 
      - /bin/sh
      - -c
      - |
        until redis-cli -h redis-node1 -p 6379 cluster info | grep -q "cluster_state:ok"; do
          echo "Waiting for Redis cluster to be ready...";
          sleep 5;
        done
        python src/consumer/consumer_app.py

  consumer-client:
    image: ghcr.io/peterliu419/garmin_project/consumer-client:latest    
    container_name: consumer-client
    depends_on:
      - consumer-app
    networks:
      - redis-cluster-net
    entrypoint: 
      - /bin/sh
      - -c
      - |
        until redis-cli -h redis-node1 -p 6379 cluster info | grep -q "cluster_state:ok"; do
          echo "Waiting for Redis cluster to be ready...";
          sleep 5;
        done
        python src/consumer/consumer_app.py

networks:
  redis-cluster-net:
    driver: bridge

volumes:
  redis-node1-data:
  redis-node2-data:
  redis-node3-data: